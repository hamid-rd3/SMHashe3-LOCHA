/*
 * This file is what a rendered Timing.h file might look like.
 * It is for reference only!
 * This file is NEVER referenced during the build.
 */

/*
 * DO NOT EDIT THIS FILE
 *
 * It is generated by CMake during build configuration.
 * See /home/username/smhasher3/platform/functions.cmake
 * for documentation on how and why this is generated.
 */
/*
 * SMHasher3
 * Copyright (C) 2021-2022  Frank J. T. Wojcik
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see
 * <https://www.gnu.org/licenses/>.
 *
 * This file incorporates work covered by the following copyright and
 * permission notice:
 *
 *     Copyright (c) 2011-2013 Austin Appleby
 *     Copyright (c) 2016      Leonid Yuriev
 *     Copyright (c) 2016      Mahmoud Al-Qudsi
 *     Copyright (c) 2016-2021 Reini Urban
 *     Copyright (c) 2019      Yann Collet
 *
 *     Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */
#include <time.h>
#include <sys/time.h>

#define NSEC_PER_SEC 1000000000ULL

FORCE_INLINE static uint64_t monotonic_clock(void) {
  struct timespec ts;
  uint64_t result;

  if (clock_gettime(CLOCK_MONOTONIC, &ts) != 0)
    return -10;

  result = ts.tv_sec * NSEC_PER_SEC;
  result += ts.tv_nsec;

  return result;
}

FORCE_INLINE uint64_t timer_start() {
    uint64_t cycles_high, cycles_low;
    __asm__ volatile
        ("cpuid\n\t"
         "rdtsc\n\t"
         "mov %%rdx, %0\n\t"
         "mov %%rax, %1\n\t" :
         "=r" (cycles_high), "=r" (cycles_low) ::
         "%rax", "%rbx", "%rcx", "%rdx");
    return (cycles_high << 32) | cycles_low;
}

FORCE_INLINE uint64_t timer_end() {
    uint64_t cycles_high, cycles_low;
    __asm__ volatile
        ("rdtscp\n\t"
         "mov %%rdx, %0\n\t"
         "mov %%rax, %1\n\t"
         "cpuid\n\t" :
         "=r" (cycles_high), "=r" (cycles_low) ::
         "%rax", "%rbx", "%rcx", "%rdx");
    return (cycles_high << 32) | cycles_low;
}
